CÓDIGO DE RESOLUÇÃO DO EXERCÍCIO


- src/sentry_object.js

export default class SentryObject {
  constructor(id, name, yearMin, yearMax) {
    this.id = id
    this.name = name
    this.yearMin = yearMin
    this.yearMax = yearMax
  }
}


- src/sentry_service.js

export async function getSentryObjects() {
  let response = await fetch("https://api.nasa.gov/neo/rest/v1/neo/sentry?api_key=DEMO_KEY")
  let result = await response.json()
  return result["sentry_objects"]
}


- src/index.js

import "core-js"
import "regenerator-runtime/runtime"

import SentryObject from "./sentry_object"
import { getSentryObjects } from "./sentry_service"

async function loadSentryObjects() {
  let sentryObjects = []
  let sentryObjectsJSON = await getSentryObjects()
  sentryObjectsJSON.forEach(sentry => {
    const newSentry = new SentryObject(sentry["sentryId"], sentry["fullname"], sentry["year_range_min"], sentry["year_range_max"])
    sentryObjects.push(newSentry)
  })
  renderSentryObjects(sentryObjects)
}

function renderSentryObjects(sentryObjects) {
  const olElement = document.getElementById("sentry-objects")
  sentryObjects.forEach(sentry => {
    const liElement = document.createElement("li")
    const text = `(${sentry.id}) ${sentry.name}: risco de colisão entre ${sentry.yearMin} e ${sentry.yearMax}`
    liElement.innerText = text
    olElement.appendChild(liElement)
  })
}

loadSentryObjects()


- dist/index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Código inicial</title>
  <script src="index.bundle.js"></script>
</head>
<body>
  <ol id="sentry-objects"></ol>
</body>
</html>