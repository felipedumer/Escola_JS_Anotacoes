CÓDIGO DE RESOLUÇÃO DO EXERCÍCIO


- src/spaceship.js

class Spaceship {
  constructor(name, maxCapacity, currentCharge, shield) {
    this.name = name
    this.maxCapacity = maxCapacity
    this.currentCharge = currentCharge
    this.shield = shield
  }

  currentPercentCharge() {
    return this.currentCharge * 100 / this.maxCapacity
  }
}

export default Spaceship


- src/spaceship_engine.js

export default class {
  constructor(spaceship) {
    this.spaceship = spaceship
  }

  async turnOn() {
    try {
      let currentChargeChecking = this.checkCurrentCharge()
      let shieldChecking = this.testShield()
      let results = await Promise.all([currentChargeChecking, shieldChecking])
      this.spaceship.shield = await this.shieldNormalizer(results[1])
      console.log(`(${this.spaceship.name}) Partida autorizada: Escudo (${this.spaceship.shield}) - Carga(${this.spaceship.currentCharge}GJ)`)
    } catch(error) {
      console.log(`(${this.spaceship.name}) Partida não autorizada: ${error}`)
    }
  }

  async checkCurrentCharge() {
    let currentCharge = this.spaceship.currentPercentCharge()
    if(currentCharge < 30) {
      return Promise.reject(`Carga em apenas ${currentCharge}GJ`)
    }
    return currentCharge
  }

  async testShield() {
    let doubledShield = this.spaceship.shield * 2
    if(doubledShield < 100) {
      return Promise.reject("Escudo em sobrecarga")
    }
    return doubledShield
  }

  async shieldNormalizer(shield) {
    let normalizedShield = shield * 0.7
    if(normalizedShield > 120) {
      return Promise.reject("Escudo em supercarga")
    } 
    return normalizedShield
  }
}


- src/index.js

import "core-js"
import "regenerator-runtime"

import Spaceship from './spaceship'
import SpaceshipEngine from "./spaceship_engine"

const sophia = new Spaceship("Sophia", 10, 5, 70)
const amsterda = new Spaceship("Amsterdã", 14, 10, 40)
const dwarfStart = new Spaceship("Estrela-Anã", 20, 4, 80)

const sophiaEngine = new SpaceshipEngine(sophia)
const amsterdaEngine = new SpaceshipEngine(amsterda)
const dwarfStartEngine = new SpaceshipEngine(dwarfStart)

sophiaEngine.turnOn()
amsterdaEngine.turnOn()
dwarfStartEngine.turnOn()

console.log("Promises")